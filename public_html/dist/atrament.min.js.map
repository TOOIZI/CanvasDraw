{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///atrament.min.js","webpack:///webpack/bootstrap d3602f18de2e96d94df7","webpack:///./index.js","webpack:///./src/atrament.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","atrament","selector","width","height","color","Atrament","_slicedToArray","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","Point","x","y","arguments","Error","_x","_y","get","set","Mouse","_Point","_this","getPrototypeOf","_down","_px","_py","d","px","py","_this2","document","window","Node","tagName","canvas","querySelector","style","cursor","mouse","mouseMove","e","preventDefault","rect","getBoundingClientRect","position","changedTouches","offsetX","offsetY","clientX","documentElement","scrollLeft","left","clientY","scrollTop","top","down","draw","_dirty","fireDirty","mouseDown","mousePosition","_mode","fill","context","beginPath","moveTo","mouseUp","closePath","addEventListener","destroy","clear","removeEventListener","getContext","globalCompositeOperation","globalAlpha","strokeStyle","lineCap","lineJoin","translate","_filling","_fillStack","SMOOTHING_INIT","WEIGHT_SPREAD","_smoothing","_maxWeight","_thickness","_targetThickness","_weight","mX","mY","rawDist","lineDistance","smoothingFactor","Math","min","dist","lineWidth","quadraticCurveTo","stroke","event","createEvent","initEvent","dispatchEvent","dirty","mode","clearRect","toDataURL","_this3","startColor","slice","getImageData","data","setTimeout","_floodFill","startX","startY","_this4","canvasWidth","canvasHeight","pixelStack","fillColor","hexToRgb","colorLayer","alpha","colorPixel","apply","concat","matchColor","matchFillColor","newPos","pop","_newPos","pixelPos","reachLeft","reachRight","putImageData","shift","w","s","o","x1","y1","x2","y2","xs","pow","ys","sqrt","hexColor","match","parseInt","compR","compG","compB","compA","r","g","b","a","fillR","fillG","fillB"],"mappings":"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","file":"atrament.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atrament\"] = factory();\n\telse\n\t\troot[\"atrament\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atrament\"] = factory();\n\telse\n\t\troot[\"atrament\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(2);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// make a class for Point\n\tvar Point = function () {\n\t  function Point(x, y) {\n\t    _classCallCheck(this, Point);\n\t\n\t    if (arguments.length < 2) throw new Error('not enough coordinates for Point.');\n\t    this._x = x;\n\t    this._y = y;\n\t  }\n\t\n\t  _createClass(Point, [{\n\t    key: 'set',\n\t    value: function set(x, y) {\n\t      if (arguments.length < 2) throw new Error('not enough coordinates for Point.set');\n\t      this._x = x;\n\t      this._y = y;\n\t    }\n\t  }, {\n\t    key: 'x',\n\t    get: function get() {\n\t      return this._x;\n\t    },\n\t    set: function set(x) {\n\t      this._x = x;\n\t    }\n\t  }, {\n\t    key: 'y',\n\t    get: function get() {\n\t      return this._y;\n\t    },\n\t    set: function set(y) {\n\t      this._y = y;\n\t    }\n\t  }]);\n\t\n\t  return Point;\n\t}();\n\t\n\t// make a class for the mouse data\n\t\n\t\n\tvar Mouse = function (_Point) {\n\t  _inherits(Mouse, _Point);\n\t\n\t  function Mouse() {\n\t    _classCallCheck(this, Mouse);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Mouse.__proto__ || Object.getPrototypeOf(Mouse)).call(this, 0, 0));\n\t\n\t    _this._down = false;\n\t    _this._px = 0;\n\t    _this._py = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Mouse, [{\n\t    key: 'down',\n\t    get: function get() {\n\t      return this._down;\n\t    },\n\t    set: function set(d) {\n\t      this._down = d;\n\t    }\n\t  }, {\n\t    key: 'x',\n\t    get: function get() {\n\t      return this._x;\n\t    },\n\t    set: function set(x) {\n\t      this._x = x;\n\t    }\n\t  }, {\n\t    key: 'y',\n\t    get: function get() {\n\t      return this._y;\n\t    },\n\t    set: function set(y) {\n\t      this._y = y;\n\t    }\n\t  }, {\n\t    key: 'px',\n\t    get: function get() {\n\t      return this._px;\n\t    },\n\t    set: function set(px) {\n\t      this._px = px;\n\t    }\n\t  }, {\n\t    key: 'py',\n\t    get: function get() {\n\t      return this._py;\n\t    },\n\t    set: function set(py) {\n\t      this._py = py;\n\t    }\n\t  }]);\n\t\n\t  return Mouse;\n\t}(Point);\n\t\n\tvar Atrament = function () {\n\t  function Atrament(selector, width, height, color) {\n\t    var _this2 = this;\n\t\n\t    _classCallCheck(this, Atrament);\n\t\n\t    if (!document) throw new Error('no DOM found');\n\t\n\t    // get canvas element\n\t    if (selector instanceof window.Node && selector.tagName === 'CANVAS') this.canvas = selector;else if (typeof selector === 'string') this.canvas = document.querySelector(selector);else throw new Error('can\\'t look for canvas based on \\'' + selector + '\\'');\n\t    if (!this.canvas) throw new Error('canvas not found');\n\t\n\t    // set external canvas params\n\t    this.canvas.width = width || 500;\n\t    this.canvas.height = height || 500;\n\t    this.canvas.style.cursor = 'crosshair';\n\t\n\t    // create a mouse object\n\t    this.mouse = new Mouse();\n\t\n\t    // mousemove handler\n\t    var mouseMove = function mouseMove(e) {\n\t      e.preventDefault();\n\t\n\t      var rect = _this2.canvas.getBoundingClientRect();\n\t      var position = e.changedTouches && e.changedTouches[0] || e;\n\t      var x = position.offsetX;\n\t      var y = position.offsetY;\n\t\n\t      if (typeof x === 'undefined') {\n\t        x = position.clientX + document.documentElement.scrollLeft - rect.left;\n\t      }\n\t      if (typeof y === 'undefined') {\n\t        y = position.clientY + document.documentElement.scrollTop - rect.top;\n\t      }\n\t\n\t      // draw if we should draw\n\t      if (_this2.mouse.down) {\n\t        _this2.draw(x, y);\n\t        if (!_this2._dirty && (x !== _this2.mouse.x || y !== _this2.mouse.y)) {\n\t          _this2._dirty = true;\n\t          _this2.fireDirty();\n\t        }\n\t      } else {\n\t        _this2.mouse.x = x;\n\t        _this2.mouse.y = y;\n\t      }\n\t    };\n\t\n\t    // mousedown handler\n\t    var mouseDown = function mouseDown(mousePosition) {\n\t      mousePosition.preventDefault();\n\t      // update position just in case\n\t      mouseMove(mousePosition);\n\t\n\t      // if we are filling - fill and return\n\t      if (_this2._mode === 'fill') {\n\t        _this2.fill();\n\t        return;\n\t      }\n\t\n\t      // remember it\n\t      _this2.mouse.px = _this2.mouse.x;\n\t      _this2.mouse.py = _this2.mouse.y;\n\t      // begin drawing\n\t      _this2.mouse.down = true;\n\t      _this2.context.beginPath();\n\t      _this2.context.moveTo(_this2.mouse.px, _this2.mouse.py);\n\t    };\n\t    var mouseUp = function mouseUp(mousePosition) {\n\t      _this2.mouse.down = false;\n\t      // stop drawing\n\t      _this2.context.closePath();\n\t    };\n\t\n\t    // attach listeners\n\t    this.canvas.addEventListener('mousemove', mouseMove);\n\t    this.canvas.addEventListener('mousedown', mouseDown);\n\t    document.addEventListener('mouseup', mouseUp);\n\t    this.canvas.addEventListener('touchstart', mouseDown);\n\t    this.canvas.addEventListener('touchend', mouseUp);\n\t    this.canvas.addEventListener('touchmove', mouseMove);\n\t\n\t    // helper for destroying Atrament (removing event listeners)\n\t    this.destroy = function () {\n\t      _this2.clear();\n\t      _this2.canvas.removeEventListener('mousemove', mouseMove);\n\t      _this2.canvas.removeEventListener('mousedown', mouseDown);\n\t      document.removeEventListener('mouseup', mouseUp);\n\t      _this2.canvas.removeEventListener('touchstart', mouseDown);\n\t      _this2.canvas.removeEventListener('touchend', mouseUp);\n\t      _this2.canvas.removeEventListener('touchmove', mouseMove);\n\t    };\n\t\n\t    // set internal canvas params\n\t    this.context = this.canvas.getContext('2d');\n\t    this.context.globalCompositeOperation = 'source-over';\n\t    this.context.globalAlpha = 1;\n\t    this.context.strokeStyle = color || 'rgba(0,0,0,1)';\n\t    this.context.lineCap = 'round';\n\t    this.context.lineJoin = 'round';\n\t    this.context.translate(0.5, 0.5);\n\t\n\t    this._filling = false;\n\t    this._fillStack = [];\n\t\n\t    // set drawing params\n\t    this.SMOOTHING_INIT = 0.85;\n\t    this.WEIGHT_SPREAD = 10;\n\t    this._smoothing = this.SMOOTHING_INIT;\n\t    this._maxWeight = 12;\n\t    this._thickness = 2;\n\t    this._targetThickness = 2;\n\t    this._weight = 2;\n\t    this._mode = 'draw';\n\t  }\n\t\n\t  _createClass(Atrament, [{\n\t    key: 'draw',\n\t    value: function draw(mX, mY) {\n\t      var mouse = this.mouse;\n\t      var context = this.context;\n\t\n\t      // calculate distance from previous point\n\t      var rawDist = Atrament.lineDistance(mX, mY, mouse.px, mouse.py);\n\t\n\t      // now, here we scale the initial smoothing factor by the raw distance\n\t      // this means that when the mouse moves fast, there is more smoothing\n\t      // and when we're drawing small detailed stuff, we have more control\n\t      // also we hard clip at 1\n\t      var smoothingFactor = Math.min(0.87, this._smoothing + (rawDist - 60) / 3000);\n\t\n\t      // calculate smoothed coordinates\n\t      mouse.x = mX - (mX - mouse.px) * smoothingFactor;\n\t      mouse.y = mY - (mY - mouse.py) * smoothingFactor;\n\t\n\t      // recalculate distance from previous point, this time relative to the smoothed coords\n\t      var dist = Atrament.lineDistance(mouse.x, mouse.y, mouse.px, mouse.py);\n\t\n\t      // calculate target thickness based on the new distance\n\t      this._targetThickness = (dist - 1) / (50 - 1) * (this._maxWeight - this._weight) + this._weight;\n\t      // approach the target gradually\n\t      if (this._thickness > this._targetThickness) {\n\t        this._thickness -= 0.5;\n\t      } else if (this._thickness < this._targetThickness) {\n\t        this._thickness += 0.5;\n\t      }\n\t      // set line width\n\t      context.lineWidth = this._thickness;\n\t\n\t      // draw using quad interpolation\n\t      context.quadraticCurveTo(mouse.px, mouse.py, mouse.x, mouse.y);\n\t      context.stroke();\n\t\n\t      // remember\n\t      mouse.px = mouse.x;\n\t      mouse.py = mouse.y;\n\t    }\n\t  }, {\n\t    key: 'fireDirty',\n\t    value: function fireDirty() {\n\t      var event = document.createEvent('Event');\n\t      event.initEvent('dirty', true, true);\n\t      this.canvas.dispatchEvent(event);\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      if (!this.dirty) {\n\t        return;\n\t      }\n\t\n\t      this._dirty = false;\n\t      this.fireDirty();\n\t\n\t      // make sure we're in the right compositing mode, and erase everything\n\t      if (this.context.globalCompositeOperation === 'destination-out') {\n\t        this.mode = 'draw';\n\t        this.context.clearRect(-10, -10, this.canvas.width + 20, this.canvas.height + 20);\n\t        this.mode = 'erase';\n\t      } else {\n\t        this.context.clearRect(-10, -10, this.canvas.width + 20, this.canvas.height + 20);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toImage',\n\t    value: function toImage() {\n\t      return this.canvas.toDataURL();\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill() {\n\t      var _this3 = this;\n\t\n\t      var mouse = this.mouse;\n\t      var context = this.context;\n\t      var startColor = Array.prototype.slice.call(context.getImageData(mouse.x, mouse.y, 1, 1).data, 0); // converting to Array because Safari 9\n\t\n\t      if (!this._filling) {\n\t        this.canvas.style.cursor = 'progress';\n\t        this._filling = true;\n\t\n\t        setTimeout(function () {\n\t          _this3._floodFill(mouse.x, mouse.y, startColor);\n\t        }, 100);\n\t      } else {\n\t        this._fillStack.push([mouse.x, mouse.y, startColor]);\n\t      }\n\t    }\n\t  }, {\n\t    key: '_floodFill',\n\t    value: function _floodFill(startX, startY, startColor) {\n\t      var _this4 = this;\n\t\n\t      var context = this.context;\n\t      var canvasWidth = context.canvas.width;\n\t      var canvasHeight = context.canvas.height;\n\t      var pixelStack = [[startX, startY]];\n\t      // hex needs to be trasformed to rgb since colorLayer accepts RGB\n\t      var fillColor = Atrament.hexToRgb(this.color);\n\t      // Need to save current context with colors, we will update it\n\t      var colorLayer = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n\t      var alpha = Math.min(context.globalAlpha * 10 * 255, 255);\n\t      var colorPixel = Atrament.colorPixel.apply(Atrament, [colorLayer.data].concat(_toConsumableArray(fillColor), [startColor, alpha]));\n\t      var matchColor = Atrament.matchColor.apply(Atrament, [colorLayer.data].concat(_toConsumableArray(startColor)));\n\t      var matchFillColor = Atrament.matchColor.apply(Atrament, [colorLayer.data].concat([].concat(_toConsumableArray(fillColor), [255])));\n\t\n\t      // check if we're trying to fill with the same colour, if so, stop\n\t      if (matchFillColor((startY * context.canvas.width + startX) * 4)) {\n\t        this._filling = false;\n\t        setTimeout(function () {\n\t          _this4.canvas.style.cursor = 'crosshair';\n\t        }, 100);\n\t        return;\n\t      }\n\t\n\t      while (pixelStack.length) {\n\t        var newPos = pixelStack.pop();\n\t\n\t        var _newPos = _slicedToArray(newPos, 2),\n\t            x = _newPos[0],\n\t            y = _newPos[1];\n\t\n\t        var pixelPos = (y * canvasWidth + x) * 4;\n\t\n\t        while (y-- >= 0 && matchColor(pixelPos)) {\n\t          pixelPos -= canvasWidth * 4;\n\t        }\n\t        pixelPos += canvasWidth * 4;\n\t\n\t        ++y;\n\t\n\t        var reachLeft = false;\n\t        var reachRight = false;\n\t\n\t        while (y++ < canvasHeight - 1 && matchColor(pixelPos)) {\n\t          colorPixel(pixelPos);\n\t\n\t          if (x > 0) {\n\t            if (matchColor(pixelPos - 4)) {\n\t              if (!reachLeft) {\n\t                pixelStack.push([x - 1, y]);\n\t                reachLeft = true;\n\t              }\n\t            } else if (reachLeft) {\n\t              reachLeft = false;\n\t            }\n\t          }\n\t\n\t          if (x < canvasWidth - 1) {\n\t            if (matchColor(pixelPos + 4)) {\n\t              if (!reachRight) {\n\t                pixelStack.push([x + 1, y]);\n\t                reachRight = true;\n\t              }\n\t            } else if (reachRight) {\n\t              reachRight = false;\n\t            }\n\t          }\n\t\n\t          pixelPos += canvasWidth * 4;\n\t        }\n\t      }\n\t\n\t      // Update context with filled bucket!\n\t      context.putImageData(colorLayer, 0, 0);\n\t\n\t      if (this._fillStack.length) {\n\t        this._floodFill.apply(this, _toConsumableArray(this._fillStack.shift()));\n\t      } else {\n\t        this._filling = false;\n\t        setTimeout(function () {\n\t          _this4.canvas.style.cursor = 'crosshair';\n\t        }, 100);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'color',\n\t    get: function get() {\n\t      return this.context.strokeStyle;\n\t    },\n\t    set: function set(c) {\n\t      if (typeof c !== 'string') throw new Error('wrong argument type');\n\t      this.context.strokeStyle = c;\n\t    }\n\t  }, {\n\t    key: 'weight',\n\t    get: function get() {\n\t      return this._weight;\n\t    },\n\t    set: function set(w) {\n\t      if (typeof w !== 'number') throw new Error('wrong argument type');\n\t      this._weight = w;\n\t      this._thickness = w;\n\t      this._targetThickness = w;\n\t      this._maxWeight = w + this.WEIGHT_SPREAD;\n\t    }\n\t  }, {\n\t    key: 'mode',\n\t    get: function get() {\n\t      return this._mode;\n\t    },\n\t    set: function set(m) {\n\t      if (typeof m !== 'string') throw new Error('wrong argument type');\n\t      switch (m) {\n\t        case 'erase':\n\t          this._mode = 'erase';\n\t          this.context.globalCompositeOperation = 'destination-out';\n\t          break;\n\t        case 'fill':\n\t          this._mode = 'fill';\n\t          this.context.globalCompositeOperation = 'source-over';\n\t          break;\n\t        default:\n\t          this._mode = 'draw';\n\t          this.context.globalCompositeOperation = 'source-over';\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dirty',\n\t    get: function get() {\n\t      return !!this._dirty;\n\t    }\n\t  }, {\n\t    key: 'smoothing',\n\t    get: function get() {\n\t      return this._smoothing === this.SMOOTHING_INIT;\n\t    },\n\t    set: function set(s) {\n\t      if (typeof s !== 'boolean') throw new Error('wrong argument type');\n\t      this._smoothing = s ? this.SMOOTHING_INIT : 0;\n\t    }\n\t  }, {\n\t    key: 'opacity',\n\t    set: function set(o) {\n\t      if (typeof o !== 'number') throw new Error('wrong argument type');\n\t      // now, we need to scale this, because our drawing method means we don't just get uniform transparency all over the drawn line.\n\t      // so we scale it down a lot, meaning that it'll look nicely semi-transparent\n\t      // unless opacity is 1, then we should go full on to 1\n\t      if (o >= 1) this.context.globalAlpha = 1;else this.context.globalAlpha = o / 10;\n\t    }\n\t  }], [{\n\t    key: 'lineDistance',\n\t    value: function lineDistance(x1, y1, x2, y2) {\n\t      // calculate euclidean distance between (x1, y1) and (x2, y2)\n\t      var xs = Math.pow(x2 - x1, 2);\n\t      var ys = Math.pow(y2 - y1, 2);\n\t      return Math.sqrt(xs + ys);\n\t    }\n\t  }, {\n\t    key: 'hexToRgb',\n\t    value: function hexToRgb(hexColor) {\n\t      // Since input type color provides hex and ImageData accepts RGB need to transform\n\t      var m = hexColor.match(/^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i);\n\t      return [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16)];\n\t    }\n\t  }, {\n\t    key: 'matchColor',\n\t    value: function matchColor(data, compR, compG, compB, compA) {\n\t      return function (pixelPos) {\n\t        // Pixel color equals comp color?\n\t        var r = data[pixelPos];\n\t        var g = data[pixelPos + 1];\n\t        var b = data[pixelPos + 2];\n\t        var a = data[pixelPos + 3];\n\t\n\t        return r === compR && g === compG && b === compB && a === compA;\n\t      };\n\t    }\n\t  }, {\n\t    key: 'colorPixel',\n\t    value: function colorPixel(data, fillR, fillG, fillB, startColor, alpha) {\n\t      var matchColor = Atrament.matchColor.apply(Atrament, [data].concat(_toConsumableArray(startColor)));\n\t\n\t      return function (pixelPos) {\n\t        // Update fill color in matrix\n\t        data[pixelPos] = fillR;\n\t        data[pixelPos + 1] = fillG;\n\t        data[pixelPos + 2] = fillB;\n\t        data[pixelPos + 3] = alpha;\n\t\n\t        if (!matchColor(pixelPos + 4)) {\n\t          data[pixelPos + 4] = data[pixelPos + 4] * 0.01 + fillR * 0.99;\n\t          data[pixelPos + 4 + 1] = data[pixelPos + 4 + 1] * 0.01 + fillG * 0.99;\n\t          data[pixelPos + 4 + 2] = data[pixelPos + 4 + 2] * 0.01 + fillB * 0.99;\n\t          data[pixelPos + 4 + 3] = data[pixelPos + 4 + 3] * 0.01 + alpha * 0.99;\n\t        }\n\t\n\t        if (!matchColor(pixelPos - 4)) {\n\t          data[pixelPos - 4] = data[pixelPos - 4] * 0.01 + fillR * 0.99;\n\t          data[pixelPos - 4 + 1] = data[pixelPos - 4 + 1] * 0.01 + fillG * 0.99;\n\t          data[pixelPos - 4 + 2] = data[pixelPos - 4 + 2] * 0.01 + fillB * 0.99;\n\t          data[pixelPos - 4 + 3] = data[pixelPos - 4 + 3] * 0.01 + alpha * 0.99;\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return Atrament;\n\t}();\n\t\n\t// for people who like functional programming\n\t\n\t\n\tfunction atrament(selector, width, height, color) {\n\t  return new Atrament(selector, width, height, color);\n\t}\n\t\n\tmodule.exports = atrament;\n\tmodule.exports.Atrament = Atrament;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// atrament.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d3602f18de2e96d94df7","module.exports = require('./src/atrament.js');\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// make a class for Point\nclass Point {\n  constructor(x, y) {\n    if (arguments.length < 2) throw new Error('not enough coordinates for Point.');\n    this._x = x;\n    this._y = y;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set x(x) {\n    this._x = x;\n  }\n\n  set y(y) {\n    this._y = y;\n  }\n\n  set(x, y) {\n    if (arguments.length < 2) throw new Error('not enough coordinates for Point.set');\n    this._x = x;\n    this._y = y;\n  }\n}\n\n// make a class for the mouse data\nclass Mouse extends Point {\n  constructor() {\n    super(0, 0);\n    this._down = false;\n    this._px = 0;\n    this._py = 0;\n  }\n\n  get down() {\n    return this._down;\n  }\n\n  set down(d) {\n    this._down = d;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set x(x) {\n    this._x = x;\n  }\n\n  set y(y) {\n    this._y = y;\n  }\n\n  get px() {\n    return this._px;\n  }\n\n  get py() {\n    return this._py;\n  }\n\n  set px(px) {\n    this._px = px;\n  }\n\n  set py(py) {\n    this._py = py;\n  }\n\n}\n\nclass Atrament {\n  constructor(selector, width, height, color) {\n    if (!document) throw new Error('no DOM found');\n\n    // get canvas element\n    if (selector instanceof window.Node && selector.tagName === 'CANVAS') this.canvas = selector;\n    else if (typeof selector === 'string') this.canvas = document.querySelector(selector);\n    else throw new Error(`can't look for canvas based on '${selector}'`);\n    if (!this.canvas) throw new Error('canvas not found');\n\n    // set external canvas params\n    this.canvas.width = width || 500;\n    this.canvas.height = height || 500;\n    this.canvas.style.cursor = 'crosshair';\n\n    // create a mouse object\n    this.mouse = new Mouse();\n\n    // mousemove handler\n    let mouseMove = e => {\n      e.preventDefault();\n\n      const rect = this.canvas.getBoundingClientRect();\n      const position = e.changedTouches && e.changedTouches[0] || e;\n      let x = position.offsetX;\n      let y = position.offsetY;\n\n      if (typeof x === 'undefined') {\n        x = position.clientX + document.documentElement.scrollLeft - rect.left;\n      }\n      if (typeof y === 'undefined') {\n        y = position.clientY + document.documentElement.scrollTop - rect.top;\n      }\n\n      // draw if we should draw\n      if (this.mouse.down) {\n        this.draw(x, y);\n        if (!this._dirty && (x !== this.mouse.x || y !== this.mouse.y)) {\n          this._dirty = true;\n          this.fireDirty();\n        }\n      } else {\n        this.mouse.x = x;\n        this.mouse.y = y;\n      }\n    };\n\n    // mousedown handler\n    let mouseDown = (mousePosition) => {\n      mousePosition.preventDefault();\n      // update position just in case\n      mouseMove(mousePosition);\n\n      // if we are filling - fill and return\n      if (this._mode === 'fill') {\n        this.fill();\n        return;\n      }\n\n      // remember it\n      this.mouse.px = this.mouse.x;\n      this.mouse.py = this.mouse.y;\n      // begin drawing\n      this.mouse.down = true;\n      this.context.beginPath();\n      this.context.moveTo(this.mouse.px, this.mouse.py);\n    };\n    let mouseUp = (mousePosition) => {\n      this.mouse.down = false;\n      // stop drawing\n      this.context.closePath();\n    };\n\n    // attach listeners\n    this.canvas.addEventListener('mousemove', mouseMove);\n    this.canvas.addEventListener('mousedown', mouseDown);\n    document.addEventListener('mouseup', mouseUp);\n    this.canvas.addEventListener('touchstart', mouseDown);\n    this.canvas.addEventListener('touchend', mouseUp);\n    this.canvas.addEventListener('touchmove', mouseMove);\n\n    // helper for destroying Atrament (removing event listeners)\n    this.destroy = () => {\n      this.clear();\n      this.canvas.removeEventListener('mousemove', mouseMove);\n      this.canvas.removeEventListener('mousedown', mouseDown);\n      document.removeEventListener('mouseup', mouseUp);\n      this.canvas.removeEventListener('touchstart', mouseDown);\n      this.canvas.removeEventListener('touchend', mouseUp);\n      this.canvas.removeEventListener('touchmove', mouseMove);\n    };\n\n    // set internal canvas params\n    this.context = this.canvas.getContext('2d');\n    this.context.globalCompositeOperation = 'source-over';\n    this.context.globalAlpha = 1;\n    this.context.strokeStyle = color || 'rgba(0,0,0,1)';\n    this.context.lineCap = 'round';\n    this.context.lineJoin = 'round';\n    this.context.translate(0.5, 0.5);\n\n    this._filling = false;\n    this._fillStack = [];\n\n    // set drawing params\n    this.SMOOTHING_INIT = 0.85;\n    this.WEIGHT_SPREAD = 10;\n    this._smoothing = this.SMOOTHING_INIT;\n    this._maxWeight = 12;\n    this._thickness = 2;\n    this._targetThickness = 2;\n    this._weight = 2;\n    this._mode = 'draw';\n  }\n\n  static lineDistance(x1, y1, x2, y2) {\n    // calculate euclidean distance between (x1, y1) and (x2, y2)\n    let xs = Math.pow(x2 - x1, 2);\n    let ys = Math.pow(y2 - y1, 2);\n    return Math.sqrt(xs + ys);\n  }\n\n  static hexToRgb(hexColor) {\n    // Since input type color provides hex and ImageData accepts RGB need to transform\n    let m = hexColor.match(/^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i);\n    return [\n      parseInt(m[1], 16),\n      parseInt(m[2], 16),\n      parseInt(m[3], 16)\n    ];\n  }\n\n  static matchColor(data, compR, compG, compB, compA) {\n    return (pixelPos) => {\n      // Pixel color equals comp color?\n      const r = data[pixelPos];\n      const g = data[pixelPos + 1];\n      const b = data[pixelPos + 2];\n      const a = data[pixelPos + 3];\n\n      return (r === compR && g === compG && b === compB && a === compA);\n    };\n  }\n\n  static colorPixel(data, fillR, fillG, fillB, startColor, alpha) {\n    let matchColor = Atrament.matchColor(data, ...startColor);\n\n    return (pixelPos) => {\n      // Update fill color in matrix\n      data[pixelPos] = fillR;\n      data[pixelPos + 1] = fillG;\n      data[pixelPos + 2] = fillB;\n      data[pixelPos + 3] = alpha;\n\n      if (!matchColor(pixelPos + 4)) {\n        data[pixelPos + 4] = data[pixelPos + 4] * 0.01 + fillR * 0.99;\n        data[pixelPos + 4 + 1] = data[pixelPos + 4 + 1] * 0.01 + fillG * 0.99;\n        data[pixelPos + 4 + 2] = data[pixelPos + 4 + 2] * 0.01 + fillB * 0.99;\n        data[pixelPos + 4 + 3] = data[pixelPos + 4 + 3] * 0.01 + alpha * 0.99;\n      }\n\n      if (!matchColor(pixelPos - 4)) {\n        data[pixelPos - 4] = data[pixelPos - 4] * 0.01 + fillR * 0.99;\n        data[pixelPos - 4 + 1] = data[pixelPos - 4 + 1] * 0.01 + fillG * 0.99;\n        data[pixelPos - 4 + 2] = data[pixelPos - 4 + 2] * 0.01 + fillB * 0.99;\n        data[pixelPos - 4 + 3] = data[pixelPos - 4 + 3] * 0.01 + alpha * 0.99;\n      }\n    };\n  }\n\n  draw(mX, mY) {\n    let mouse = this.mouse;\n    let context = this.context;\n\n    // calculate distance from previous point\n    let rawDist = Atrament.lineDistance(mX, mY, mouse.px, mouse.py);\n\n    // now, here we scale the initial smoothing factor by the raw distance\n    // this means that when the mouse moves fast, there is more smoothing\n    // and when we're drawing small detailed stuff, we have more control\n    // also we hard clip at 1\n    let smoothingFactor = Math.min(0.87, this._smoothing + (rawDist - 60) / 3000);\n\n    // calculate smoothed coordinates\n    mouse.x = mX - (mX - mouse.px) * smoothingFactor;\n    mouse.y = mY - (mY - mouse.py) * smoothingFactor;\n\n    // recalculate distance from previous point, this time relative to the smoothed coords\n    let dist = Atrament.lineDistance(mouse.x, mouse.y, mouse.px, mouse.py);\n\n    // calculate target thickness based on the new distance\n    this._targetThickness = (dist - 1) / (50 - 1) * (this._maxWeight - this._weight) + this._weight;\n    // approach the target gradually\n    if (this._thickness > this._targetThickness) {\n      this._thickness -= 0.5;\n    } else if (this._thickness < this._targetThickness) {\n      this._thickness += 0.5;\n    }\n    // set line width\n    context.lineWidth = this._thickness;\n\n    // draw using quad interpolation\n    context.quadraticCurveTo(mouse.px, mouse.py, mouse.x, mouse.y);\n    context.stroke();\n\n    // remember\n    mouse.px = mouse.x;\n    mouse.py = mouse.y;\n  }\n\n  get color() {\n    return this.context.strokeStyle;\n  }\n\n  set color(c) {\n    if (typeof c !== 'string') throw new Error('wrong argument type');\n    this.context.strokeStyle = c;\n  }\n\n  get weight() {\n    return this._weight;\n  }\n\n  set weight(w) {\n    if (typeof w !== 'number') throw new Error('wrong argument type');\n    this._weight = w;\n    this._thickness = w;\n    this._targetThickness = w;\n    this._maxWeight = w + this.WEIGHT_SPREAD;\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  get dirty() {\n    return !!this._dirty;\n  }\n\n  set mode(m) {\n    if (typeof m !== 'string') throw new Error('wrong argument type');\n    switch (m) {\n      case 'erase':\n        this._mode = 'erase';\n        this.context.globalCompositeOperation = 'destination-out';\n        break;\n      case 'fill':\n        this._mode = 'fill';\n        this.context.globalCompositeOperation = 'source-over';\n        break;\n      default:\n        this._mode = 'draw';\n        this.context.globalCompositeOperation = 'source-over';\n        break;\n    }\n  }\n\n  get smoothing() {\n    return this._smoothing === this.SMOOTHING_INIT;\n  }\n\n  set smoothing(s) {\n    if (typeof s !== 'boolean') throw new Error('wrong argument type');\n    this._smoothing = s ? this.SMOOTHING_INIT : 0;\n  }\n\n  set opacity(o) {\n    if (typeof o !== 'number') throw new Error('wrong argument type');\n    // now, we need to scale this, because our drawing method means we don't just get uniform transparency all over the drawn line.\n    // so we scale it down a lot, meaning that it'll look nicely semi-transparent\n    // unless opacity is 1, then we should go full on to 1\n    if (o >= 1) this.context.globalAlpha = 1;\n    else this.context.globalAlpha = o / 10;\n  }\n\n  fireDirty() {\n    const event = document.createEvent('Event');\n    event.initEvent('dirty', true, true);\n    this.canvas.dispatchEvent(event);\n  }\n\n  clear() {\n    if (!this.dirty) {\n      return;\n    }\n\n    this._dirty = false;\n    this.fireDirty();\n\n    // make sure we're in the right compositing mode, and erase everything\n    if (this.context.globalCompositeOperation === 'destination-out') {\n      this.mode = 'draw';\n      this.context.clearRect(-10, -10, this.canvas.width + 20, this.canvas.height + 20);\n      this.mode = 'erase';\n    } else {\n      this.context.clearRect(-10, -10, this.canvas.width + 20, this.canvas.height + 20);\n    }\n  }\n\n  toImage() {\n    return this.canvas.toDataURL();\n  }\n\n  fill() {\n    let mouse = this.mouse;\n    let context = this.context;\n    let startColor = Array.prototype.slice.call(context.getImageData(mouse.x, mouse.y, 1, 1).data, 0); // converting to Array because Safari 9\n\n    if (!this._filling) {\n      this.canvas.style.cursor = 'progress';\n      this._filling = true;\n\n      setTimeout(() => { this._floodFill(mouse.x, mouse.y, startColor); }, 100);\n    } else {\n      this._fillStack.push([\n        mouse.x,\n        mouse.y,\n        startColor\n      ]);\n    }\n  }\n\n  _floodFill(startX, startY, startColor) {\n    const context = this.context;\n    const canvasWidth = context.canvas.width;\n    const canvasHeight = context.canvas.height;\n    let pixelStack = [[startX, startY]];\n    // hex needs to be trasformed to rgb since colorLayer accepts RGB\n    const fillColor = Atrament.hexToRgb(this.color);\n    // Need to save current context with colors, we will update it\n    let colorLayer = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n    let alpha = Math.min(context.globalAlpha * 10 * 255, 255);\n    let colorPixel = Atrament.colorPixel(colorLayer.data, ...fillColor, startColor, alpha);\n    const matchColor = Atrament.matchColor(colorLayer.data, ...startColor);\n    const matchFillColor = Atrament.matchColor(colorLayer.data, ...[...fillColor, 255]);\n\n    // check if we're trying to fill with the same colour, if so, stop\n    if (matchFillColor((startY * context.canvas.width + startX) * 4)) {\n      this._filling = false;\n      setTimeout(() => { this.canvas.style.cursor = 'crosshair'; }, 100);\n      return;\n    }\n\n    while (pixelStack.length) {\n      let newPos = pixelStack.pop();\n      let [x, y] = newPos;\n\n      let pixelPos = (y * canvasWidth + x) * 4;\n\n      while (y-- >= 0 && matchColor(pixelPos)) {\n        pixelPos -= canvasWidth * 4;\n      }\n      pixelPos += canvasWidth * 4;\n\n      ++y;\n\n      let reachLeft = false;\n      let reachRight = false;\n\n      while (y++ < canvasHeight - 1 && matchColor(pixelPos)) {\n        colorPixel(pixelPos);\n\n        if (x > 0) {\n          if (matchColor(pixelPos - 4)) {\n            if (!reachLeft) {\n              pixelStack.push([x - 1, y]);\n              reachLeft = true;\n            }\n          } else if (reachLeft) {\n            reachLeft = false;\n          }\n        }\n\n        if (x < canvasWidth - 1) {\n          if (matchColor(pixelPos + 4)) {\n            if (!reachRight) {\n              pixelStack.push([x + 1, y]);\n              reachRight = true;\n            }\n          } else if (reachRight) {\n            reachRight = false;\n          }\n        }\n\n        pixelPos += canvasWidth * 4;\n      }\n    }\n\n    // Update context with filled bucket!\n    context.putImageData(colorLayer, 0, 0);\n\n    if (this._fillStack.length) {\n      this._floodFill(...this._fillStack.shift());\n    } else {\n      this._filling = false;\n      setTimeout(() => { this.canvas.style.cursor = 'crosshair'; }, 100);\n    }\n  }\n\n}\n\n// for people who like functional programming\nfunction atrament(selector, width, height, color) {\n  return new Atrament(selector, width, height, color);\n}\n\nmodule.exports = atrament;\nmodule.exports.Atrament = Atrament;\n\n\n\n// WEBPACK FOOTER //\n// ./src/atrament.js"],"sourceRoot":""}